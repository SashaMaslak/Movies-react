{"version":3,"file":"static/js/217.ea9e1938.chunk.js","mappings":"kMAGaA,EAAeC,EAAAA,GAAAA,IAAH,wCAIZC,EAAiBD,EAAAA,GAAAA,OAAH,opB,SCJdE,EAAS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACvB,OACE,SAACJ,EAAD,WACE,SAACE,EAAD,CAAgBG,KAAK,SAASC,QAASF,EAAvC,uBAKL,C,yGCNYG,EAAUN,EAAAA,GAAAA,GAAH,mGAMPO,EAAOP,EAAAA,GAAAA,GAAH,gMAUJQ,EAAYR,EAAAA,GAAAA,IAAH,wFAMTS,EAAaT,EAAAA,GAAAA,GAAH,yC,6BCUvB,EA5BmB,SAAC,GAAgB,IAAdU,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACC,EAAA,EAAD,CAAKC,GAAIC,EAAAA,EAAAA,GAAAA,EAAYC,EAAGD,EAAAA,EAAAA,MAAAA,GAAxB,UACE,SAACT,EAAD,UACGI,EAAOO,KAAI,SAAAC,GACV,OACE,SAACX,EAAD,WACE,UAAC,KAAD,CAASY,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMX,GAAlD,WACE,SAACH,EAAD,CACEe,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aAf9D,6EAkBgBC,IAAI,MAEN,SAAChB,EAAD,UAAaS,EAAMQ,qBAVZR,EAAME,GAcpB,OAIR,C,yIChCYO,EAAiB3B,EAAAA,GAAAA,IAAH,6DAKd4B,EAAO5B,EAAAA,GAAAA,KAAH,0CAIJ6B,EAAY7B,EAAAA,GAAAA,MAAH,wKAST8B,EAAU9B,EAAAA,GAAAA,OAAH,+K,SCDpB,EAjBkB,SAAC,GAAkB,IAAhB+B,EAAe,EAAfA,SACnB,OACE,SAACJ,EAAD,WACE,UAACC,EAAD,CAAMG,SAAUA,EAAhB,WACE,SAACF,EAAD,CACEzB,KAAK,OACL4B,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAACL,EAAD,CAAS1B,KAAK,SAAd,wBAIP,E,4DCwCD,EAhDkB,WAChB,OAA4BgC,EAAAA,EAAAA,UAAS,IAArC,eAAO1B,EAAP,KAAe2B,EAAf,KACA,GAAwBD,EAAAA,EAAAA,UAAS,GAAjC,eAAOE,EAAP,KAAaC,EAAb,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAASH,EAAaI,IAAI,SAChC,UAAID,QAAJ,IAAIA,GAAAA,EAAQE,OAAQ,CAEhBP,GAAa,IACbQ,EAAAA,EAAAA,IAAkBH,EAAQR,GACvBY,MAAK,SAAAC,GACJd,GAAU,SAAAe,GAAI,OAAc,IAATd,EAAaa,EAAb,kBAAuBC,IAAvB,OAAgCD,GAArC,IACXE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,SAAQ,kBAAMhB,GAAa,EAAnB,GACZ,IACAY,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,SAAQ,kBAAMhB,GAAa,EAAnB,GAGd,CACF,GAAE,CAACE,EAAcL,IAWlB,OACE,UAACzB,EAAA,EAAD,CAAKC,GAAIC,EAAAA,EAAAA,GAAAA,EAAYC,EAAGD,EAAAA,EAAAA,MAAAA,GAAxB,WACE,SAAC,EAAD,CAAWgB,SAPE,SAAA2B,GACfA,EAAEC,iBACFf,EAAgB,CAAEgB,MAAOF,EAAEG,cAAcC,SAASF,MAAMG,OACzD,IAKIvB,IAAa,SAACwB,EAAA,EAAD,KACd,UAAC,EAAAC,SAAD,CAAUC,SAAU,KAApB,WACE,SAACC,EAAA,EAAD,CAAYzD,OAAQA,MACjBA,EAAO0D,SAAW5B,IACnB,SAACtC,EAAA,EAAD,CAAQC,eAhBO,WACrBoC,GAAQ,SAAAa,GAAI,OAAIA,EAAO,CAAX,GACb,SAmBF,C,iFCpDc,SAASiB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,EAClD,CDES,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMjD,KAAKoD,EACtH,CFGmC,CAAgBJ,KAAQ,EAAAO,EAAA,GAA2BP,IGLvE,WACb,MAAM,IAAIQ,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Searchbar/SearchBar.styled.js","components/Searchbar/Searchbar.jsx","pages/MoviePage.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const ContainerBtn = styled.div`\ndisplay: flex;\n`\n\nexport const ButtonLoadMore = styled.button`\nmargin: 15px auto;\n  padding: 8px 16px;\n  border-radius: 3px;\n  background-color: #34ebae;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #000;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover {\n    box-shadow: 5px 5px 5px #ff00ff;\n    transition: box-shadow .25s linear;\n   }\n`;","import { ButtonLoadMore, ContainerBtn } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ handleLoadMore }) => {\n  return (\n    <ContainerBtn>\n      <ButtonLoadMore type=\"button\" onClick={handleLoadMore}>\n        LoadMore\n      </ButtonLoadMore>\n    </ContainerBtn>\n  );\n};\n\nButton.propTypes = {\n  handleLoadMore: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\n/*\n * Стили компонента ImageGallery\n */\nexport const MovList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 32px;\n`;\n\nexport const Item = styled.li`\n  text-align: center;\n  border-radius: 10px;\n  :hover {\n    cursor: pointer;\n    box-shadow: 10px 10px 10px #ff00ff;\n    transition: box-shadow .25s linear;\n  }\n`;\n\nexport const ImgPoster = styled.img`\n  margin: auto;\n  border-radius: 8px;\n  margin-bottom: 10px;\n`\n\nexport const MovieTitle = styled.h3`\n  padding: 8px;\n`","import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MovList, Item, ImgPoster, MovieTitle } from './MoviesList.styled';\nimport { theme } from 'theme';\nimport { Box } from 'components/Box';\n\nconst defaultPoster =\n  'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Box as={theme.as.s} p={theme.space[5]}>\n      <MovList>\n        {movies.map(movie => {\n          return (\n            <Item key={movie.id}>\n              <NavLink to={`/movie/${movie.id}`} state={{ from: location }}>\n                <ImgPoster\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                      : defaultPoster\n                  }\n                  alt=\"\"\n                />\n                <MovieTitle>{movie.original_title}</MovieTitle>\n              </NavLink>\n            </Item>\n          );\n        })}\n      </MovList>\n    </Box>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ),\n};\n","import styled from \"styled-components\";\n\n\nexport const SearchbarBlock = styled.div`\n   display: flex;\n   margin: auto;\n`\n\nexport const Form = styled.form`\n   margin: auto;\n`\n\nexport const FormInput = styled.input`\n   margin-right: 16px;\n   font-size: 18px;\n   &:hover {\n    box-shadow: 5px 5px 5px #ff00ff;\n    transition: box-shadow .25s linear;\n   }\n`\n\nexport const FormBtn = styled.button`\n   font-size: 18px;\n   background-color: #34ebae;\n   &:hover {\n    box-shadow: 5px 5px 5px #ff00ff;\n    transition: box-shadow .25s linear;\n   }\n`\n\n\n\n\n","import PropTypes from 'prop-types';\nimport { Form, SearchbarBlock, FormInput, FormBtn } from './SearchBar.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  return (\n    <SearchbarBlock>\n      <Form onSubmit={onSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <FormBtn type=\"submit\">Search</FormBtn>\n      </Form>\n    </SearchbarBlock>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { fetchFilmsByQuery } from 'services/fetchFilms';\nimport { theme } from 'theme';\nimport { Box } from 'components/Box';\nimport { Button } from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MoviePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const params = searchParams.get('query');\n    if (params?.trim()) {\n      const getMovieQuery = () => {\n        setIsLoading(true);\n        fetchFilmsByQuery(params, page)\n          .then(res => {\n            setMovies(prev => (page === 1 ? res : [...prev, ...res]))\n              .catch(error => console.log(error))\n              .finally(() => setIsLoading(false));\n          })\n          .catch(error => console.log(error))\n          .finally(() => setIsLoading(false));\n      };\n      getMovieQuery();\n    }\n  }, [searchParams, page]);\n\n  const handleLoadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.currentTarget.elements.query.value });\n  };\n\n  return (\n    <Box as={theme.as.m} p={theme.space[4]}>\n      <Searchbar onSubmit={onSubmit} />\n      {isLoading && <Loader />}\n      <Suspense fallback={null}>\n        <MoviesList movies={movies} />\n        {!!movies.length && !isLoading && (\n          <Button handleLoadMore={handleLoadMore} />\n        )}\n      </Suspense>\n    </Box>\n  );\n};\n\nexport default MoviePage;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["ContainerBtn","styled","ButtonLoadMore","Button","handleLoadMore","type","onClick","MovList","Item","ImgPoster","MovieTitle","movies","location","useLocation","Box","as","theme","p","map","movie","to","id","state","from","src","poster_path","alt","original_title","SearchbarBlock","Form","FormInput","FormBtn","onSubmit","name","autoComplete","autoFocus","placeholder","useState","setMovies","page","setPage","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","params","get","trim","fetchFilmsByQuery","then","res","prev","catch","error","console","log","finally","e","preventDefault","query","currentTarget","elements","value","Loader","Suspense","fallback","MoviesList","length","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}