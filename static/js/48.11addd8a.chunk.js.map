{"version":3,"file":"static/js/48.11addd8a.chunk.js","mappings":"yPAIaA,EAAmBC,EAAAA,GAAAA,GAAH,qFAMdC,EAAcD,EAAAA,GAAAA,EAAF,yEAKZE,EAAcF,EAAAA,GAAAA,EAAH,qF,SCY1B,EApBoB,SAAC,GAAiB,IAAfG,EAAc,EAAdA,QACrB,OACE,UAACJ,EAAD,WACGI,GAAWA,EAAQC,OAAS,IAC3B,wBACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,2BACE,UAACL,EAAD,sBAAuBK,EAAOC,WAC9B,SAACL,EAAD,UAAcI,EAAOE,YAFdF,EAAOG,GADC,MAQtBN,GAA8B,IAAnBA,EAAQC,SAClB,uEAIP,ECtBYM,EAAeV,EAAAA,GAAAA,IAAH,uEAKZW,EAAeX,EAAAA,GAAAA,GAAH,4D,UC2BzB,EA5BgB,WACd,OAA8BY,EAAAA,EAAAA,UAAS,IAAvC,eAAOT,EAAP,KAAgBU,EAAhB,KACMC,GAASC,EAAAA,EAAAA,MACf,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAEND,GAAa,IACbE,EAAAA,EAAAA,IAAaL,EAAOL,IACjBW,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIG,SAChBX,EAAWQ,EAAIG,QAChB,IACAC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,EAAhB,IACXC,SAAQ,kBAAMV,GAAa,EAAnB,GAGd,GAAE,CAACH,EAAOL,MAGT,UAACC,EAAD,WACGM,IAAa,SAACY,EAAA,EAAD,KACd,SAACjB,EAAD,4BACA,SAAC,EAAD,CAAaR,QAASA,MAG3B,C,2MC/BD0B,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,WAAOC,GAAP,yFACDH,IAAAA,IAAA,uCAA0CC,EAA1C,iBAA0DE,EAA1D,iBADC,uBACnBR,EADmB,EACzBS,KAAMT,QADmB,kBAEzBA,GAFyB,2CAAH,sDAKlBU,EAAiB,mCAAG,WAAOC,EAAOH,GAAd,yFACAH,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDK,EAApD,iBAAkEH,IADlE,uBAClBR,EADkB,EACxBS,KAAMT,QADkB,kBAExBA,GAFwB,2CAAH,wDAKjBY,EAAc,mCAAG,WAAO3B,GAAP,yFACPoB,IAAAA,IAAA,iBAAoBpB,EAApB,oBAAkCqB,IAD3B,uBACrBG,EADqB,EACrBA,KADqB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAS,mCAAG,WAAO5B,GAAP,yFACFoB,IAAAA,IAAA,iBAAoBpB,EAApB,4BAA0CqB,IADxC,uBAChBG,EADgB,EAChBA,KADgB,kBAEhBA,GAFgB,2CAAH,sDAKTd,EAAY,mCAAG,WAAOV,GAAP,yFACLoB,IAAAA,IAAA,iBAAoBpB,EAApB,4BAA0CqB,IADrC,uBACnBG,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,qD","sources":["components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/fetchFilms.js"],"sourcesContent":["import styled from 'styled-components';\n\n\n\nexport const ReviewsLIstBlock = styled.ul`\n  display: flex;\n  list-style: square;\n  padding: 18px;\n  `;\n\n  export const TitleReviews= styled.p`\n    margin-top: 24px;\n    font-weight: bold;\n  `;\n\n  export const TextReviews = styled.p`\n    margin-top: 12px;\n    border-bottom: 1px solid #000;\n  `;","import PropTypes from 'prop-types';\nimport {\n  ReviewsLIstBlock,\n  TitleReviews,\n  TextReviews,\n} from './ReviewsList.styled';\n\nconst ReviewsList = ({ reviews }) => {\n  return (\n    <ReviewsLIstBlock>\n      {reviews && reviews.length > 0 && (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <TitleReviews>Author: {review.author}</TitleReviews>\n              <TextReviews>{review.content}</TextReviews>\n            </li>\n          ))}\n        </ul>\n      )}\n      {reviews && reviews.length === 0 && (\n        <p> We don't have any reviews for this movie</p>\n      )}\n    </ReviewsLIstBlock>\n  );\n};\n\nexport default ReviewsList;\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\n\n\nexport const ReviewsBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  `;\n\nexport const ReviewsTitle = styled.h2`\n  color: green;\n  margin: auto;\n  `;\n\n  \n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/fetchFilms';\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\nimport { ReviewsBlock, ReviewsTitle } from './Reviews.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const params = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getReviews = () => {\n      setIsLoading(true);\n      fetchReviews(params.id)\n        .then(res => {\n          console.log(res.results);\n          setReviews(res.results);\n        })\n        .catch(error => console.log(error))\n        .finally(() => setIsLoading(false));\n    };\n    getReviews();\n  }, [params.id]);\n\n  return (\n    <ReviewsBlock>\n      {isLoading && <Loader />}\n      <ReviewsTitle>Reviews List</ReviewsTitle>\n      <ReviewsList reviews={reviews} />\n    </ReviewsBlock>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b1ed6db84db5d6eba5aed4dde918fe90';\n\nexport const fetchTrendingFilms = async (page) => {\n  const {data:{results}} = await axios.get(`/trending/movie/week?api_key=${API_KEY}&page=${page}&language=en`);\n  return results;\n};\n\nexport const fetchFilmsByQuery = async (query, page) => {\n  const {data:{results}} = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`);\n  return results;\n};\n\nexport const fetchFilmsById = async (id) => {\n  const {data} = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchCast = async (id) => {\n  const {data} = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchReviews = async (id) => {\n  const {data} = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n"],"names":["ReviewsLIstBlock","styled","TitleReviews","TextReviews","reviews","length","map","review","author","content","id","ReviewsBlock","ReviewsTitle","useState","setReviews","params","useParams","isLoading","setIsLoading","useEffect","fetchReviews","then","res","console","log","results","catch","error","finally","Loader","axios","API_KEY","fetchTrendingFilms","page","data","fetchFilmsByQuery","query","fetchFilmsById","fetchCast"],"sourceRoot":""}